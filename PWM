#include <hidef.h> /* for EnableInterrupts macro */
#include "derivative.h" /* include peripheral declarations */
#define periodo 20 // periodo del PWM en ms




void conf_TPM(int ciclo_util);
void cambia_ciclo_util(int a);
int util=10;	//ciclo util en porcentaje

void main(void) {
	SOPT=0x40;
			// WatchDog desactivado 
			// COPT1 = tiempo de muestreo de WatchDog largo
	conf_TPM(util);
	
	
	
  EnableInterrupts;
  

  

  for(;;) {
    // cambiar valor de util
	  cambia_ciclo_util(util);
  } /* loop forever */
  /* please make sure that you never leave main */
}

void conf_TPM(int ciclo_util){
	//
	// CPWMS = PWM centrado
	// CLKSA = Fuente de reloj BUSCLK
	// PS1 = Divisor de 4, reloj a 1kHz
	
	TPM2SC=(TPM2SC_CPWMS_MASK |TPM2SC_CLKSA_MASK|TPM2SC_PS1_MASK);
	
	// PWM centrado, High-true pulses (clear output on compare)
	TPM2C0SC=(TPM2C0SC_ELS0B_MASK);
	
	// Medio periodo
	TPM2MOD=periodo*1000/2;	
	
	//ciclo util
	TPM2C0V=ciclo_util*1000;
}

void cambia_ciclo_util(int a){
	//ciclo util
		TPM2C0V=a*1000;
	
}
